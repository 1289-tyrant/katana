if(HAVE_BIG_ENDIAN)
  set(ROME ${CMAKE_SOURCE_DIR}/inputs/structured/rome99.big.gr)
  set(SROME ${CMAKE_SOURCE_DIR}/inputs/structured/srome99.big.gr)
else()
  set(ROME ${CMAKE_SOURCE_DIR}/inputs/structured/rome99.gr)
  set(SROME ${CMAKE_SOURCE_DIR}/inputs/structured/srome99.gr)
endif()
set(BASE ${CMAKE_SOURCE_DIR})

makeTest(acquire)
makeTest(bandwidth)
makeTest(barriers)
makeTest(empty-member-lcgraph)
makeTest(filegraph COMMAND_SUFFIX ${ROME})
makeTest(flatmap)
makeTest(forward-declare-graph)
makeTest(gcollections)
makeTest(graph-compile)
makeTest(lc-adaptor)
makeTest(lock)
makeTest(loopoverhead REQUIRES OPENMP_FOUND)
makeTest(mem)
makeTest(move)
makeTest(pc)
makeTest(sched)
makeTest(sort)
makeTest(static)
makeTest(twoleveliteratora)
makeTest(worklists-compile)

function(runSmallTest prog)
  set(options DISTSAFE)
  set(oneValueArgs)
  set(multiValueArgs)
  cmake_parse_arguments(APP "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
  get_filename_component(base ${prog} NAME)
  add_test(NAME ${base} COMMAND "$<TARGET_FILE:${base}>" ${APP_UNPARSED_ARGUMENTS})
endfunction()

if(NOT SKIP_COMPILE_APPS)
  runSmallTest(apps/avi/AVIodgExplicitNoLock -n 0 -d 2 -f "${BASE}/inputs/avi/squareCoarse.NEU.gz")
  runSmallTest(apps/barneshut/barneshut -n 1000 -steps 1 -seed 0)
  runSmallTest(apps/betweennesscentrality/betweennesscentrality-outer "${BASE}/inputs/structured/torus5.gr" -forceVerify)
  runSmallTest(apps/bfs/bfs "${ROME}")
  runSmallTest(apps/boruvka/boruvka "${ROME}")
  runSmallTest(apps/clustering/clustering -numPoints 1000)
  runSmallTest(apps/delaunayrefinement/delaunayrefinement "${BASE}/inputs/meshes/r10k.1")
  runSmallTest(apps/delaunaytriangulation/delaunaytriangulation "${BASE}/inputs/meshes/r10k.node")
  runSmallTest(apps/des/DESunordered "${BASE}/inputs/des/multTree6bit.net")
  runSmallTest(apps/gmetis/gmetis "${ROME}" 4)
  runSmallTest(apps/kruskal/KruskalHand "${ROME}")
  runSmallTest(apps/independentset/independentset "${ROME}")
  runSmallTest(apps/matching/bipartite-mcm -inputType generated -n 100 -numEdges 1000 -numGroups 10 -seed 0)
  runSmallTest(apps/preflowpush/preflowpush "${SROME}" 0 100)
  runSmallTest(apps/sssp/sssp "${ROME}")
  runSmallTest(apps/surveypropagation/surveypropagation 9 100 300 3)
  runSmallTest(apps/tutorial/hello-world 2 10)
  runSmallTest(apps/tutorial/torus 2 100)
  runSmallTest(apps/tutorial/torus-improved 2 100)
endif()
