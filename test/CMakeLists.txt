if(HAVE_BIG_ENDIAN)
  set(ROME ${CMAKE_SOURCE_DIR}/inputs/structured/rome99.big.gr)
  set(SROME ${CMAKE_SOURCE_DIR}/inputs/structured/srome99.big.gr)
else()
  set(ROME ${CMAKE_SOURCE_DIR}/inputs/structured/rome99.gr)
  set(SROME ${CMAKE_SOURCE_DIR}/inputs/structured/srome99.gr)
endif()
set(BASE ${CMAKE_SOURCE_DIR})

makeTest(ADD_TARGET acquire DISTSAFE)
makeTest(ADD_TARGET bandwidth)
makeTest(ADD_TARGET barriers)
makeTest(ADD_TARGET deterministic ${ROME})
makeTest(ADD_TARGET empty-member-lcgraph DISTSAFE)
makeTest(ADD_TARGET oneach)
makeTest(ADD_TARGET filegraph DISTSAFE ${ROME})
makeTest(ADD_TARGET flatmap DISTSAFE)
makeTest(ADD_TARGET forward-declare-graph DISTSAFE)
makeTest(ADD_TARGET foreach)
makeTest(ADD_TARGET gcollections DISTSAFE)
makeTest(ADD_TARGET graph-compile DISTSAFE)
makeTest(ADD_TARGET gslist)
makeTest(ADD_TARGET graph)
makeTest(ADD_TARGET lc-adaptor DISTSAFE)
makeTest(ADD_TARGET lock DISTSAFE)
makeTest(ADD_TARGET loop-overhead REQUIRES OPENMP_FOUND DISTSAFE)
makeTest(ADD_TARGET mem DISTSAFE)
makeTest(ADD_TARGET move DISTSAFE)
makeTest(ADD_TARGET pc DISTSAFE)
makeTest(ADD_TARGET sched DISTSAFE)
makeTest(ADD_TARGET sort)
makeTest(ADD_TARGET static DISTSAFE)
makeTest(ADD_TARGET twoleveliteratora DISTSAFE)
makeTest(ADD_TARGET wakeup-overhead)
makeTest(ADD_TARGET worklists-compile DISTSAFE)

makeTest(TARGET apps/avi/AVIodgExplicitNoLock -n 0 -d 2 -f "${BASE}/inputs/avi/squareCoarse.NEU.gz")
makeTest(TARGET apps/barneshut/barneshut -n 1000 -steps 1 -seed 0)
makeTest(TARGET apps/betweennesscentrality/betweennesscentrality-outer "${BASE}/inputs/structured/torus5.gr" -forceVerify)
makeTest(TARGET apps/bfs/bfs "${ROME}")
makeTest(TARGET apps/boruvka/boruvka "${ROME}")
makeTest(TARGET apps/clustering/clustering -numPoints 1000)
makeTest(TARGET apps/delaunayrefinement/delaunayrefinement "${BASE}/inputs/meshes/r10k.1")
makeTest(TARGET apps/delaunaytriangulation/delaunaytriangulation "${BASE}/inputs/meshes/r10k.node")
makeTest(TARGET apps/des/DESunordered "${BASE}/inputs/des/multTree6bit.net")
makeTest(TARGET apps/gmetis/gmetis "${ROME}" 4)
makeTest(TARGET apps/kruskal/KruskalHand "${ROME}")
makeTest(TARGET apps/independentset/independentset "${ROME}")
makeTest(TARGET apps/matching/bipartite-mcm -inputType generated -n 100 -numEdges 1000 -numGroups 10 -seed 0)
makeTest(TARGET apps/preflowpush/preflowpush "${SROME}" 0 100)
makeTest(TARGET apps/sssp/sssp "${ROME}")
makeTest(TARGET apps/surveypropagation/surveypropagation 9 100 300 3)
makeTest(TARGET apps/tutorial/hello-world 2 10)
makeTest(TARGET apps/tutorial/torus 2 100)
makeTest(TARGET apps/tutorial/torus-improved 2 100)
