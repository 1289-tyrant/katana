{# -*- mode: cython -*- -#}
{# This Jinja2 generates  -#}
# distutils: language=c++
# distutils: extra_compile_args=["-std=c++17"]

# THIS FILE IS GENERATED.

from .cpp.libgalois cimport Galois
from libc.stdint cimport *


cdef extern from *:
    """
    typedef void (*do_all_operator_type)(uint64_t, void*);
    """
    ctypedef void (*do_all_operator_type)(uint64_t, void*) nogil except *

cdef extern from *:
    """
    typedef void (*for_each_operator_type)(uint64_t, galois::UserContext<uint64_t>*, void*);
    """
    ctypedef void (*for_each_operator_type)(uint64_t, Galois.UserContext[uint64_t]*, void*) nogil except *

{% macro wrap_single_loop(loop_type, descriptors, operator_type, operator_lambda) -%}
cdef extern from *:
    """
    inline void _c_{{ loop_type }}_{{ descriptors|sort|join("_") }}(uint64_t frm, uint64_t to, {{ operator_type }} func, void * user_data, const char* loop_name) {
      galois::{{ loop_type }}(galois::iterate(frm, to),
          {{operator_lambda}},
          galois::loopname(loop_name)
          {%- for d in descriptors|sort -%}
            , galois::{{ d }}()
          {%- endfor -%}
          );
    }
    """
    void _c_{{ loop_type }}_{{ descriptors|sort|join("_") }}(uint64_t from_v, uint64_t to, {{ operator_type }} func, void * user_data, const char* loop_name) nogil except *
{% endmacro %}

{% macro wrap_loop(loop_type, descriptors, operator_type, operator_lambda_body) -%}
{% for ss in all_combinations(descriptors) %}
{{ wrap_single_loop(loop_type, ss, operator_type, operator_lambda_body) }}
{% endfor %}
{% endmacro %}

{{ wrap_loop("do_all", ["steal"], "do_all_operator_type", "[&](uint64_t arg) { func(arg, user_data); }") }}
{{ wrap_loop("for_each", ["steal", "no_pushes", "disable_conflict_detection"], "for_each_operator_type", "[&](uint64_t arg, auto& ctx) { func(arg, &ctx, user_data); }") }}
