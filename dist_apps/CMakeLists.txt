if(USE_GGC)
  # for debugging 
  if(CMAKE_BUILD_TYPE MATCHES "Debug")
    add_definitions(-D__GALOIS_CUDA_CHECK_ERROR__)
    set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS}; -lineinfo)

    add_definitions(-D__GALOIS_DEBUG_WORKLIST__)
  endif()
endif()

app(bfs_pull-topological bfs_pull-topological/gen.cpp DISTSAFE)
target_link_libraries(bfs_pull-topological galois_dist)
if(USE_GGC)
  target_compile_definitions(bfs_pull-topological PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(bfs_pull-topological bfs_pull-topological_cuda)
  cuda_add_library(bfs_pull-topological_cuda bfs_pull-topological/gen_cuda.cu)
  target_link_libraries(bfs_pull-topological_cuda ggrt)
endif()

app(bfs_push-filter bfs_push-filter/gen.cpp DISTSAFE)
target_link_libraries(bfs_push-filter galois_dist)
if(USE_GGC)
  target_compile_definitions(bfs_push-filter PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(bfs_push-filter bfs_push-filter_cuda)
  cuda_add_library(bfs_push-filter_cuda bfs_push-filter/gen_cuda.cu)
  target_link_libraries(bfs_push-filter_cuda ggrt)
endif()

app(cc_pull-topological cc_pull-topological/gen.cpp DISTSAFE)
target_link_libraries(cc_pull-topological galois_dist)
if(USE_GGC)
  target_compile_definitions(cc_pull-topological PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(cc_pull-topological cc_pull-topological_cuda)
  cuda_add_library(cc_pull-topological_cuda cc_pull-topological/gen_cuda.cu)
  target_link_libraries(cc_pull-topological_cuda ggrt)
endif()

app(cc_push-filter cc_push-filter/gen.cpp DISTSAFE)
target_link_libraries(cc_push-filter galois_dist)
if(USE_GGC)
  target_compile_definitions(cc_push-filter PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(cc_push-filter cc_push-filter_cuda)
  cuda_add_library(cc_push-filter_cuda cc_push-filter/gen_cuda.cu)
  target_link_libraries(cc_push-filter_cuda ggrt)
endif()

app(pagerank_pull-topological pagerank_pull-topological/gen.cpp DISTSAFE)
target_link_libraries(pagerank_pull-topological galois_dist)
if(USE_GGC)
  target_compile_definitions(pagerank_pull-topological PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(pagerank_pull-topological pagerank_pull-topological_cuda)
  cuda_add_library(pagerank_pull-topological_cuda pagerank_pull-topological/gen_cuda.cu)
  target_link_libraries(pagerank_pull-topological_cuda ggrt)
endif()

app(pagerank_push-filter pagerank_push-filter/gen.cpp DISTSAFE)
target_link_libraries(pagerank_push-filter galois_dist)
if(USE_GGC)
  target_compile_definitions(pagerank_push-filter PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(pagerank_push-filter pagerank_push-filter_cuda)
  cuda_add_library(pagerank_push-filter_cuda pagerank_push-filter/gen_cuda.cu)
  target_link_libraries(pagerank_push-filter_cuda ggrt)
endif()

app(sssp_pull-topological sssp_pull-topological/gen.cpp DISTSAFE)
target_link_libraries(sssp_pull-topological galois_dist)
if(USE_GGC)
  target_compile_definitions(sssp_pull-topological PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(sssp_pull-topological sssp_pull-topological_cuda)
  cuda_add_library(sssp_pull-topological_cuda sssp_pull-topological/gen_cuda.cu)
  target_link_libraries(sssp_pull-topological_cuda ggrt)
endif()

app(sssp_push-filter sssp_push-filter/gen.cpp DISTSAFE)
target_link_libraries(sssp_push-filter galois_dist)
if(USE_GGC)
  target_compile_definitions(sssp_push-filter PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(sssp_push-filter sssp_push-filter_cuda)
  cuda_add_library(sssp_push-filter_cuda sssp_push-filter/gen_cuda.cu)
  target_link_libraries(sssp_push-filter_cuda ggrt)
endif()

app(kcore_push-filter kcore_push-filter/gen.cpp DISTSAFE)
target_link_libraries(kcore_push-filter galois_dist)
if(USE_GGC)
  target_compile_definitions(kcore_push-filter PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(kcore_push-filter kcore_push-filter_cuda)
  cuda_add_library(kcore_push-filter_cuda kcore_push-filter/gen_cuda.cu)
  target_link_libraries(kcore_push-filter_cuda ggrt)
endif()

app(bc bc/gen.cpp DISTSAFE)
target_link_libraries(bc galois_dist)
if(USE_GGC)
  target_compile_definitions(bc PRIVATE __GALOIS_HET_CUDA__=1)
  target_link_libraries(bc bc_cuda)
  cuda_add_library(bc_cuda bc/gen_cuda.cu)
  target_link_libraries(bc_cuda ggrt)
endif()

app(sgd_pull-topological sgd_pull-topological/gen.cpp DISTSAFE)
target_link_libraries(sgd_pull-topological galois_dist)
