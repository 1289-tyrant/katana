DESCRIPTION 

This program counts the number of triangles in a given iundirected graph. We 
implement both node-iterator and edge-iterator algorithms from the following:

Thomas Schank. Algorithmic Aspects of Triangle-Based Network Analysis. PhD
Thesis. Universitat Karlsruhe. 2007.

All versions expect a symmetric graph in gr format.


TUNING PERFORMANCE  

The performance of both algorithms depend on an optimal choice of the compile 
time constant, CHUNK_SIZE, the granularity of stolen work when work stealing is 
enabled (via galois::steal()). The optimal value of the constant might depend on 
the architecture, so you might want to evaluate the performance over a range of 
values (say [16-4096]).

BUILD

$GALOIS_ROOT denotes the root of the Galois source. $BUILD_ROOT denotes the 
directory where you want to build PageRank. 

$ mkdir -p $BUILD_ROOT; cd $BUILD_ROOT
$ CC=gcc CXX=g++ cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1  $GALOIS_ROOT
$ cd ./lonestar/triangles; make -j


RUN

The following are a few examples of running PageRank.

$ ./triangles <path-symmetric-graph> -algo edgeiterator -t 40
$ ./triangles <path-symmetric-graph> -t=20 -algo=nodeiterator
