DESCRIPTION 

This program produces a Delaunay triangulation from a set of 2-D points. We 
implement the algorithm proposed by Bowyer and that by Watson:

1. Adrian Bowyer. Computing Dirichlet tessellations, The Computer Journal, 
Vol. 24, No. 2, pp 162 - 166, 1981.

2. David F. Watson. Computing the n-dimensional tessellation with application to 
Voronoi polytopes, The Computer Journal, Vol. 24, No. 2, pp 167 - 172, 1981. 

The implementation expects a list of nodes and their coordinates.


TUNING PERFORMANCE  

For the for_each loop named "Main", the chunk size of galois::wl<CA>() should be 
tuned. It controls the granularity of work distribution. The optimal value of the 
constant might depend on the architecture, so you might want to evaluate the 
performance over a range of values (say [16-4096]).

BUILD

$GALOIS_ROOT denotes the root of the Galois source. $BUILD_ROOT denotes the 
directory where you want to build PageRank. 

$ mkdir -p $BUILD_ROOT; cd $BUILD_ROOT
$ CC=gcc CXX=g++ cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1  $GALOIS_ROOT
$ cd ./lonestar/delaunaytriangulation; make -j


RUN

The following are a few examples of running PageRank.

$ ./delaunaytriangulation <path-to-node-list> -t 40
