DESCRIPTION 

We implement both pull and push-style PageRank algorithms. The push-style
algorithms are based on the computations (Algorithm 4) described in the 
PageRank Europar 2015 paper.

Whang et al. Scalable Data-driven PageRank: Algorithms, System Issues, and 
Lessons Learned. Europar 2015.

There are two variants, topological and residual, of the pull-style algorithm 
that are implemented. The pull variants perform better than the push variants 
since there are no atomic operations. The residual version performs and scales 
the best. It does less work and uses separate arrays for storing delta and 
residual information to improve locality and use of memory bandwidth.

Note that the pull variants expect a transpose graph.


BUILD

$GALOIS_ROOT denotes the root of the Galois source. $BUILD_ROOT denotes the 
directory where you want to build PageRank. 

$ mkdir -p $BUILD_ROOT; cd $BUILD_ROOT
$ CC=gcc CXX=g++ cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1  $GALOIS_ROOT
$ cd ./lonestar/pagerank; make -j 


RUN

The following are a few examples of running PageRank.

$ ./pagerank-pull <path-transpose-graph> -tolerance=0.001 
$ ./pagerank-pull <path-transpose-graph> -t=20 -tolerance=0.001 -algo=Residual
$ ./pagerank-push <path-graph> -t=40 -tolerance=0.001 -algo=Async
