#### Script to check the output of algorithms:
### Author: Gurbinder Gill (gurbinder533@gmail.com)
### python script.py masterFile allfile*
### expects files in the follwing format:
###### nodeID nodeFieldVal
######## These are generated by Galois::Runtime::printOutput function.
### Requires python version > 2.7

import sys

tolerance=0.0001

def check_results(masterFile, otherFiles, offset, errors):
  with open(masterFile) as mfile, open(otherFiles) as ofile:
    mfile.seek(offset)
    for line1, line2 in zip(mfile,ofile):
      split_line1 = line1.split(' ')
      split_line2 = line2.split(' ')
      offset = offset + len(line1);
      if (split_line1[0] == split_line2[0]):
        if(abs(float(split_line1[1]) - float(split_line2[1])) > tolerance):
          print "NOT MATCHED \n";
          print line1;
          print line2;
          errors = errors + 1;
      else:
        print "OFFSET NOT CORRECT\n";
        print split_line2[0];
        print split_line1[0];
        return (-1, errors);


  return (offset, errors);

def main(masterFile, allFiles_arr):
  offset = 0;
  errors = 0;
  for i in range(0 , len(allFiles_arr)):
    print allFiles_arr[i]
    print offset
    offset, errors = check_results(masterFile, allFiles_arr[i], offset, errors)
    if(offset == -1):
      print "\nOFFSET NOT CORRECT\n";
      break;
  if (errors > 0):
    print "\nFAILED";
    print "No of mismatches", errors;
  if (errors > 0) or (offset == -1):
    print allFiles_arr[i];
    return -1;
  return 0;

if __name__ == "__main__":
  arg = sys.argv
  print arg;
  masterFile = arg[1];
  allFiles_arr = arg[2:]
  print allFiles_arr
  ret = main(masterFile, allFiles_arr)
  if(ret == 0):
    print "SUCCESS!!!!\n";
